<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <groupId>com.distra.switch</groupId>
  <artifactId>switch</artifactId>
  <packaging>pom</packaging>
  <name>Distra 00000 Switch</name>
  <url>http://distra.com</url>
  <version>2.5-SNAPSHOT</version>
  <properties>
    <switchPomId>$Id: pom.xml 59802 2013-06-19 06:20:03Z james $</switchPomId>
    <pomId></pomId>

    <!-- Use explicit encoding rather than relying on platform default -->
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>

    <com.distra.switch.version>2.5-SNAPSHOT</com.distra.switch.version>
    <ci.notifier.mail.address>dev-switch@distra.com</ci.notifier.mail.address>
    <cartridge.deploy.repositoryId>distra-snapshot</cartridge.deploy.repositoryId>
    <distra.obf.classifier></distra.obf.classifier>
    <distra.cartridge.classesDir>${project.build.directory}/classes</distra.cartridge.classesDir>

    <jmockit.groupId>mockit</jmockit.groupId>
    <jmockit.version>0.997</jmockit.version>
    <!-- TODO: upgrade to latest jmockit version?
               0.997 is the latest version that our code works with. Changes required include:
                 - redefineMethds() removed
                 - withAny() removed
    <jmockit.groupId>com.googlecode.jmockit</jmockit.groupId>
    <jmockit.version>1.1</jmockit.version>
    -->

    <netbeans.hint.license>distra</netbeans.hint.license>
    <oracle.version>10g</oracle.version>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
    <java.rt>lib/rt.jar</java.rt>
    <java.jsse>lib/jsse.jar</java.jsse>
    <md5sum>/usr/bin/md5sum</md5sum>
    <com.distra.ting.mode.switch1>deploy</com.distra.ting.mode.switch1>
<!--
    <sonar.host.url>http://yallop:9000</sonar.host.url>
    <sonar.jdbc.url>jdbc:derby://yallop:1527/sonar</sonar.jdbc.url>
-->
    <sonar.skip.design>true</sonar.skip.design>
    <sonar.dynamicAnalysis>reuseReports</sonar.dynamicAnalysis>
    <sonar.surefire.reportsPath>${project.build.directory}/surefire-reports</sonar.surefire.reportsPath>
    <sonar.core.codeCoveragePlugin>jacoco</sonar.core.codeCoveragePlugin>
    <sonar.jacoco.reportPath>${project.build.directory}/jacoco.exec</sonar.jacoco.reportPath>
    <sonar.jacoco.itReportPath>${project.build.directory}/it-jacoco.exec</sonar.jacoco.itReportPath>
    <jacoco.version>0.5.10.201208310627</jacoco.version>
    <!-- Should be able to set this with jacoco:prepare-agent but can't get it to work when setting propertyName -->
    <!-- Keep unit tests and integration tests (IT) separate -->
    <coverageAgent>-javaagent:${settings.localRepository}/org/jacoco/org.jacoco.agent/${jacoco.version}/org.jacoco.agent-${jacoco.version}-runtime.jar=destfile=${sonar.jacoco.reportPath}</coverageAgent>
    <itCoverageAgent>-javaagent:${settings.localRepository}/org/jacoco/org.jacoco.agent/${jacoco.version}/org.jacoco.agent-${jacoco.version}-runtime.jar=destfile=${sonar.jacoco.itReportPath}</itCoverageAgent>
    <jmockitAgent>-javaagent:${settings.localRepository}/mockit/jmockit/${jmockit.version}/jmockit-${jmockit.version}.jar</jmockitAgent>

    <!-- antrun depends on ant, so use the same version of ant that it depends on -->
    <antrun.version>1.7</antrun.version>
    <ant.version>1.8.2</ant.version>
    <!-- for versions 1.6.x and below 'ant', for newer versions 'org.apache.ant'-->
    <ant.groupId>org.apache.ant</ant.groupId>
    <ant-contrib.version>20020829</ant-contrib.version>
    <!-- Note: There are hard coded references to groovy version in exi build-War.xml-->
    <groovy.version>1.8.2</groovy.version>

    <!-- aciworldwide apsf variables. If you change apsf.version, check slf4j.version below -->
    <apsf.groupId>com.aciworldwide.aps.adf</apsf.groupId>
    <apsf.version>1.3-SNAPSHOT</apsf.version>

    <!-- Version should match the version pulled in by APSF transitive dependencies -->
    <slf4j.version>1.7.2</slf4j.version>

  </properties>
  <scm>
    <connection>scm:svn:svn+ssh://svn.dev.syd.distra.com/SVN/engineering/products/switch/trunk</connection>
    <developerConnection>scm:svn:svn+ssh://svn.dev.syd.distra.com/SVN/engineering/products/switch/trunk</developerConnection>
    <url>http://svn.dev.syd.distra.com/engineering/products/switch/trunk</url>
  </scm>
  <ciManagement>
    <system>continuum</system>
    <url>http://localhost:8080/continuum/servlet/continuum</url>
    <notifiers>
      <notifier>
        <type>mail</type>
        <configuration>
          <address>${ci.notifier.mail.address}</address>
        </configuration>
      </notifier>
    </notifiers>
  </ciManagement>
  <distributionManagement>
    <repository>
      <id>distra</id>
      <url>${distra.deploy.release.url}</url>
    </repository>
    <snapshotRepository>
      <id>distra</id>
      <url>${distra.deploy.snapshot.url}</url>
    </snapshotRepository>
    <site>
      <id>distra</id>
      <url>${distra.deploy.site.url}/switch/snapshot/${project.version}</url>
    </site>
  </distributionManagement>
  <dependencyManagement>
    <dependencies>
      <dependency>
        <groupId>org.apache.maven.skins</groupId>
        <artifactId>maven-default-skin</artifactId>
        <version>1.0</version>
      </dependency>
      <dependency>
        <groupId>${ant.groupId}</groupId>
        <artifactId>ant</artifactId>
        <version>${ant.version}</version>
      </dependency>
      <dependency>
        <groupId>bcel</groupId>
        <artifactId>bcel</artifactId>
        <version>5.1</version>
      </dependency>
      <dependency>
        <groupId>bsh</groupId>
        <artifactId>bsh</artifactId>
        <version>2.0b1</version>
      </dependency>
      <dependency>
        <groupId>com.adventnet.agent</groupId>
        <artifactId>utilities</artifactId>
        <version>5.1.0</version>
      </dependency>
      <dependency>
        <groupId>com.adventnet.agent</groupId>
        <artifactId>runtimeutilities</artifactId>
        <version>5.1.0</version>
      </dependency>
      <dependency>
        <groupId>com.adventnet.logging</groupId>
        <artifactId>logging</artifactId>
        <version>5.1.0</version>
      </dependency>
      <dependency>
        <groupId>com.adventnet.snmp</groupId>
        <artifactId>agent</artifactId>
        <version>5.1.0</version>
      </dependency>
      <dependency>
        <groupId>com.adventnet.snmp</groupId>
        <artifactId>snmp</artifactId>
        <version>5.1.0</version>
      </dependency>
      <dependency>
        <groupId>com.thoughtworks.xstream</groupId>
        <artifactId>xstream</artifactId>
        <version>1.3.1</version>
      </dependency>
      <dependency>
        <groupId>com.toedter</groupId>
        <artifactId>jcalendar</artifactId>
        <version>1.2.2</version>
      </dependency>
      <dependency>
        <groupId>commons-cli</groupId>
        <artifactId>commons-cli</artifactId>
        <version>1.2</version>
      </dependency>
      <dependency>
        <groupId>commons-io</groupId>
        <artifactId>commons-io</artifactId>
        <version>1.4</version>
      </dependency>
      <dependency>
        <groupId>commons-logging</groupId>
        <artifactId>commons-logging</artifactId>
        <version>1.0.2</version>
      </dependency>
      <dependency>
        <groupId>gcom.syncsocket</groupId>
        <artifactId>syncsocket-api</artifactId>
        <version>1.0</version>
      </dependency>
      <dependency>
        <groupId>httpunit</groupId>
        <artifactId>httpunit</artifactId>
        <version>1.6</version>
      </dependency>
      <!-- <dependency>
        <groupId>jasperreports</groupId>
        <artifactId>jasperreports</artifactId>
        <version>1.1.0</version>
      </dependency> -->
      <dependency>
        <groupId>javax.mail</groupId>
        <artifactId>mail</artifactId>
        <version>1.3.2</version>
      </dependency>
      <dependency>
        <groupId>jetty</groupId>
        <artifactId>javax.servlet</artifactId>
        <version>2.4.0</version>
      </dependency>
      <dependency>
        <groupId>jetty</groupId>
        <artifactId>org.mortbay.jetty</artifactId>
        <version>5.1.4</version>
      </dependency>
      <dependency>
        <groupId>org.codehaus.gmaven.runtime</groupId>
        <artifactId>gmaven-runtime-default</artifactId>
        <scope>test</scope>
        <version>1.0-rc-3</version>
     </dependency> 
      <dependency>
        <groupId>${jmockit.groupId}</groupId>
         <artifactId>jmockit</artifactId>
         <version>${jmockit.version}</version>
         <scope>test</scope>
      </dependency>
      <dependency>
        <groupId>junit</groupId>
        <artifactId>junit</artifactId>
        <version>3.8.1</version>
      </dependency>
      <dependency>
        <groupId>log4j</groupId>
        <artifactId>log4j</artifactId>
        <version>1.2.17</version>
      </dependency>
      <dependency>
        <groupId>oracle</groupId>
        <artifactId>jdbc</artifactId>
        <version>${oracle.version}</version>
        <scope>runtime</scope>
      </dependency>
      <dependency>
        <groupId>org.apache.commons</groupId>
        <artifactId>commons-exec</artifactId>
        <version>1.0.1</version>
      </dependency>
      <dependency>
        <groupId>org.codehaus.plexus</groupId>
        <artifactId>plexus-utils</artifactId>
        <version>1.0.4</version>
      </dependency>
      <dependency>
        <groupId>org.snmp4j</groupId>
        <artifactId>snmp4j</artifactId>
        <version>1.6d</version>
      </dependency>
      <dependency>
        <groupId>westhawk</groupId>
        <artifactId>snmp</artifactId>
        <version>4_13</version>
      </dependency>
      <dependency>
        <groupId>org.codehaus.groovy</groupId>
        <artifactId>groovy-all</artifactId>
        <version>${groovy.version}</version>
      </dependency>
      <dependency>
        <groupId>org.fusesource.jansi</groupId>
        <artifactId>jansi</artifactId>
        <version>1.6</version>
      </dependency>
      <dependency>
        <groupId>jline</groupId>
        <artifactId>jline</artifactId>
        <version>1.0</version>
      </dependency>
      <dependency>
        <groupId>org.hsqldb</groupId>
        <artifactId>hsqldb</artifactId>
        <version>2.2.4</version>
      </dependency>
      <dependency>
        <groupId>org.hsqldb</groupId>
        <artifactId>sqltool</artifactId>
        <version>2.2.4</version>
      </dependency>
      <dependency>
        <groupId>com.ibm.mq</groupId>
        <artifactId>com.ibm.mq</artifactId>
        <version>7.0.1.3</version>
      </dependency>
      <dependency>
        <groupId>com.ibm.mq</groupId>
        <artifactId>connector</artifactId>
        <version>7.0.1.3</version>
      </dependency>
      <dependency>
        <groupId>com.ibm.mq</groupId>
        <artifactId>com.ibm.mq.jmqi</artifactId>
        <version>7.0.1.3</version>
      </dependency>
      <dependency>
        <groupId>com.ibm.mq</groupId>
        <artifactId>com.ibm.mq.headers</artifactId>
        <version>7.0.1.3</version>
      </dependency>
      <dependency>
        <groupId>com.ibm.mq</groupId>
        <artifactId>com.ibm.mq.commonservices</artifactId>
        <version>7.0.1.3</version>
      </dependency>
      <dependency>
        <groupId>com.ibm.mq</groupId>
        <artifactId>com.ibm.mq.pcf</artifactId>
        <version>7.0.1.3</version>
      </dependency>
      <dependency>
        <groupId>${project.groupId}</groupId>
        <artifactId>useful</artifactId>
        <version>${com.distra.switch.version}</version>
      </dependency>
      <dependency>
        <groupId>${project.groupId}</groupId>
        <artifactId>useful</artifactId>
        <type>test-jar</type>
        <version>${com.distra.switch.version}</version>
      </dependency>
      <dependency>
        <groupId>${project.groupId}</groupId>
        <artifactId>executive</artifactId>
        <version>${com.distra.switch.version}</version>
      </dependency>
      <dependency>
        <groupId>${project.groupId}</groupId>
        <artifactId>boot</artifactId>
        <version>${com.distra.switch.version}</version>
      </dependency>
      <dependency>
        <groupId>${project.groupId}</groupId>
        <artifactId>pm</artifactId>
        <version>${com.distra.switch.version}</version>
      </dependency>
      <dependency>
        <groupId>${project.groupId}</groupId>
        <artifactId>pm</artifactId>
        <type>test-jar</type>
        <version>${com.distra.switch.version}</version>
      </dependency>
      <dependency>
        <groupId>${project.groupId}</groupId>
        <artifactId>ui</artifactId>
        <version>${com.distra.switch.version}</version>
      </dependency>
      <dependency>
        <groupId>${project.groupId}</groupId>
        <artifactId>sso-jaas</artifactId>
        <version>${com.distra.switch.version}</version>
      </dependency>
      <dependency>
        <groupId>${project.groupId}</groupId>
        <artifactId>sso-ldap</artifactId>
        <version>${com.distra.switch.version}</version>
      </dependency>
      <dependency>
        <groupId>${project.groupId}</groupId>
        <artifactId>ting</artifactId>
        <version>${com.distra.switch.version}</version>
      </dependency>
      <dependency>
        <groupId>${project.groupId}</groupId>
        <artifactId>ting</artifactId>
        <type>test-jar</type>
        <version>${com.distra.switch.version}</version>
      </dependency>
      <dependency>
        <groupId>${project.groupId}</groupId>
        <artifactId>gensvc</artifactId>
        <version>${com.distra.switch.version}</version>
      </dependency>
      <dependency>
        <groupId>${project.groupId}</groupId>
        <artifactId>gensvc</artifactId>
        <type>test-jar</type>
        <version>${com.distra.switch.version}</version>
      </dependency>
      <dependency>
        <groupId>${project.groupId}</groupId>
        <artifactId>coresw</artifactId>
        <version>${com.distra.switch.version}</version>
      </dependency>
      <dependency>
        <groupId>${project.groupId}</groupId>
        <artifactId>coresw</artifactId>
        <type>test-jar</type>
        <version>${com.distra.switch.version}</version>
      </dependency>
      <dependency>
        <groupId>${project.groupId}</groupId>
        <artifactId>eftsw</artifactId>
        <version>${com.distra.switch.version}</version>
      </dependency>
      <dependency>
        <groupId>${project.groupId}</groupId>
        <artifactId>eftsw</artifactId>
        <type>test-jar</type>
        <version>${com.distra.switch.version}</version>
      </dependency>
      <dependency>
        <groupId>${project.groupId}</groupId>
        <artifactId>eftep</artifactId>
        <version>${com.distra.switch.version}</version>
      </dependency>
      <dependency>
        <groupId>${project.groupId}</groupId>
        <artifactId>pos</artifactId>
        <version>${com.distra.switch.version}</version>
      </dependency>
      <dependency>
        <groupId>${project.groupId}</groupId>
        <artifactId>atm</artifactId>
        <version>${com.distra.switch.version}</version>
      </dependency>
      <dependency>
        <groupId>${project.groupId}</groupId>
        <artifactId>atm</artifactId>
        <type>test-jar</type>
        <version>${com.distra.switch.version}</version>
      </dependency>
      <dependency>
        <groupId>${project.groupId}</groupId>
        <artifactId>sim</artifactId>
        <version>${com.distra.switch.version}</version>
      </dependency>
      <dependency>
        <groupId>${project.groupId}</groupId>
        <artifactId>web</artifactId>
        <version>${com.distra.switch.version}</version>
      </dependency>
      <dependency>
        <groupId>${project.groupId}</groupId>
        <artifactId>exi</artifactId>
        <version>${com.distra.switch.version}</version>
      </dependency>
      <dependency>
        <groupId>${project.groupId}</groupId>
        <artifactId>eua</artifactId>
        <version>${com.distra.switch.version}</version>
      </dependency>
    </dependencies>
  </dependencyManagement>
  <dependencies>
     <!--
       jmockit wants to go before junit; see "Using JMockit in a Maven project"
       http://jmockit.googlecode.com/svn/trunk/www/installation.html
     -->
    <dependency>
      <groupId>${jmockit.groupId}</groupId>
      <artifactId>jmockit</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>junit</groupId>
      <artifactId>junit</artifactId>
    </dependency>
    <dependency>
      <groupId>com.google.code.findbugs</groupId>
      <artifactId>annotations</artifactId>
      <version>1.3.9</version>
    </dependency>
    <dependency>
      <groupId>com.google.code.findbugs</groupId>
      <artifactId>jsr305</artifactId>
      <version>1.3.9</version>
    </dependency>
  </dependencies>
  <build>
    <defaultGoal>clean deploy</defaultGoal>
    <resources>
      <resource>
        <directory>src/main/java</directory>
        <includes>
          <include>**/*.xml</include>
          <include>**/resources/**/*</include>
        </includes>
      </resource>
      <resource>
        <directory>src/main/resources</directory>
      </resource>
    </resources>
    <testResources>
      <testResource>
        <directory>src/test/java</directory>
        <includes>
          <include>**/*.xml</include>
        </includes>
      </testResource>
      <testResource>
        <directory>src/test/resources</directory>
      </testResource>
    </testResources>
    <plugins>
      <plugin>
       <artifactId>maven-antrun-plugin</artifactId>
        <version>${antrun.version}</version>
        <executions>
          <execution>
            <id>print-properties</id>
            <phase>validate</phase>
            <goals>
              <goal>run</goal>
            </goals>
            <configuration>
              <target>
                <echo>switchPomId: ${switchPomId}</echo>
                <echo>pomId:       ${pomId}</echo>
              </target>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>com.distra.maven-plugins</groupId>
        <artifactId>maven-project-plugin</artifactId>
        <executions>
          <execution>
            <id>component-validation</id>
            <goals><goal>validatecartridge</goal></goals>
            <configuration>
<!--               <skip>false</skip> -->
            </configuration>
          </execution>
        </executions>
      </plugin>
       <plugin>
         <groupId>org.codehaus.gmaven</groupId>
           <artifactId>gmaven-plugin</artifactId>
             <dependencies>
                <dependency>
                  <groupId>org.codehaus.groovy</groupId>
                  <artifactId>groovy-all</artifactId>
                  <version>${groovy.version}</version>
              </dependency>
              <dependency>
                <groupId>${ant.groupId}</groupId>
                <artifactId>ant</artifactId>
                <version>${ant.version}</version>
             </dependency>
           </dependencies>
           <executions>
             <execution>
               <configuration>
                 <providerSelection>1.7</providerSelection>
               </configuration>
               <goals>
                  <goal>generateTestStubs</goal>
                  <goal>testCompile</goal>
               </goals>
            </execution>
         </executions>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-surefire-plugin</artifactId>
        <executions>
          <execution>
            <id>default-test</id>
            <configuration>
              <excludes>
                <exclude>**/*SystemTest*</exclude>
                <exclude>**/*SmokeTest*</exclude>
                <exclude>**/*Test*$*</exclude>
              </excludes>
              <argLine>
                -Xms512m -Xmx2048m -XX:PermSize=256m -XX:MaxPermSize=512m ${coverageAgent} ${jmockitAgent}
              </argLine>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.jacoco</groupId>
        <artifactId>jacoco-maven-plugin</artifactId>
        <executions>
          <!-- This doesn't seem to work as expected.
               When we specify a propertyName, it seems to be set, but then when we include it in ArgLIne it is empty
               so we hard code coverageAgent and itCoverageAgent at the top of the file.
               However prepare-agent is left here, as it serves a very important purpose of downloading the
               required jacoco artifacts into the local repository for use during test/integration-test phases
           -->
          <execution>
            <id>prepare-agent</id>
              <!--
            <configuration>
              <propertyName>coverageAgent</propertyName>
            </configuration>
             -->
            <goals>
              <goal>prepare-agent</goal>
            </goals>
          </execution>
          <execution>
            <id>report</id>
            <configuration>
              <dataFile>${sonar.jacoco.reportPath}</dataFile>
              <outputDirectory>${project.reporting.outputDirectory}/jacoco</outputDirectory>
            </configuration>
            <phase>pre-site</phase>
            <goals>
              <goal>report</goal>
            </goals>
          </execution>
          <execution>
            <id>it-report</id>
            <configuration>
              <dataFile>${sonar.jacoco.itReportPath}</dataFile>
              <outputDirectory>${project.reporting.outputDirectory}/it-jacoco</outputDirectory>
            </configuration>
            <phase>pre-site</phase>
            <goals>
              <goal>report</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
    </plugins>
    <pluginManagement>
      <plugins>
        <plugin>
          <!-- Initialise ANT-run plugin in the top-level POM. This is 
               necessary due to a bug (feature?) in Maven whereby plugins
               appear to be lazily constructed (by the first POM that refers
               to them) and then re-used in subsequent invocations.
               Unfortunately this means that if other project's ANT-run plugin
               want to change the plugin definition (e.g. the list of
               dependencies) then this won't get used. The current workaround
               is to declare the ANT-run plugin here and make sure that it
               contains all the required definitions for all projects.
          -->
          <artifactId>maven-antrun-plugin</artifactId>
          <version>${antrun.version}</version>
          <dependencies>
            <!-- From v1.7, no longer required, will use JDK classes for regexp -->
            <!--
            <dependency>
              <groupId>ant</groupId>
              <artifactId>ant-jakarta-regexp</artifactId>
              <version>1.6.1</version>
            </dependency>
            <dependency>
              <groupId>regexp</groupId>
              <artifactId>regexp</artifactId>
              <version>1.3</version>
            </dependency>
            -->
            <dependency>
              <groupId>ant-contrib</groupId>
              <artifactId>ant-contrib</artifactId>
              <version>${ant-contrib.version}</version>
            </dependency>
            <dependency>
              <groupId>org.jacoco</groupId>
              <artifactId>org.jacoco.ant</artifactId>
              <version>${jacoco.version}</version>
            </dependency>
            <!-- If we depend on APSF modules, ant-run fails with missing org.slf4j.impl.StaticLoggerBinder without this -->
            <dependency>
            	<groupId>org.slf4j</groupId>
            	<artifactId>slf4j-nop</artifactId>
            	<version>${slf4j.version}</version>
            </dependency>
          </dependencies>
          <executions>
            <execution>
              <phase>process-classes</phase>
              <goals><goal>run</goal></goals>
              <configuration>
                <target>
                  <taskdef resource="net/sf/antcontrib/antcontrib.properties" />
                  <if>
                    <available file="${project.build.directory}/classes" />
                    <then>
                      <mkdir dir="${project.build.outputDirectory}/META-INF"/>
                      <exec executable="svnversion" output="${project.build.outputDirectory}/META-INF/.svn-revision"/>
                    </then>
                  </if>
                </target>
              </configuration>
            </execution>
          </executions>
        </plugin>
        <plugin>
          <artifactId>maven-compiler-plugin</artifactId>
          <version>2.3.2</version>
          <configuration>
            <source>1.6</source>
            <target>1.6</target>
          </configuration>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-site-plugin</artifactId>
          <version>2.2</version>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-jar-plugin</artifactId>
          <version>2.3.2</version>
        </plugin>
        <plugin>
          <groupId>com.distra.maven-plugins</groupId>
          <artifactId>maven-cartridge-plugin</artifactId>
          <version>1.3</version>
        </plugin>
        <plugin>
          <groupId>com.distra.maven-plugins</groupId>
          <artifactId>maven-project-plugin</artifactId>
          <version>1.2</version>
        </plugin>
        <plugin>
          <groupId>com.distra.maven-plugins</groupId>
          <artifactId>maven-fixture-plugin</artifactId>
          <version>1.0</version>
        </plugin>
        <!-- <plugin>
          <groupId>com.distra.maven-plugins</groupId>
          <artifactId>maven-jasper-plugin</artifactId>
          <version>1.0-SNAPSHOT</version>
          <executions>
            <execution>
              <goals>
                <goal>compile</goal>
              </goals>
            </execution>
          </executions>
        </plugin> -->
        <plugin>
          <groupId>org.jacoco</groupId>
          <artifactId>jacoco-maven-plugin</artifactId>
          <version>${jacoco.version}</version>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-surefire-plugin</artifactId>
          <version>2.12</version>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-failsafe-plugin</artifactId>
          <version>2.12</version>
        </plugin>
        <plugin>
          <groupId>org.codehaus.mojo</groupId>
          <artifactId>sonar-maven-plugin</artifactId>
          <version>${sonarVersion}</version>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-dependency-plugin</artifactId>
          <version>2.4</version>
        </plugin>
      </plugins>
    </pluginManagement>
    <extensions>
      <extension>
        <groupId>org.apache.maven.wagon</groupId>
        <artifactId>wagon-ssh-external</artifactId>
        <version>1.0-beta-6</version>
      </extension>
    </extensions>
  </build>
  <reporting>
    <plugins>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-surefire-report-plugin</artifactId>
        <version>2.12</version>
      </plugin>
      <!--<plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-pmd-plugin</artifactId>
        <version>2.4</version>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-javadoc-plugin</artifactId>
        <configuration>
          <minmemory>128m</minmemory>
          <maxmemory>512m</maxmemory>
        </configuration>
      </plugin>-->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-project-info-reports-plugin</artifactId>
        <version>2.0.1</version>
        <reportSets>
          <reportSet>
            <reports>
              <report>dependencies</report>
              <report>project-team</report>
              <report>mailing-list</report>
              <report>cim</report>
              <report>issue-tracking</report>
              <report>license</report>
              <report>scm</report>
            </reports>
          </reportSet>
        </reportSets>
      </plugin>
    </plugins>
  </reporting>
  <modules>
    <module>useful</module>
    <module>boot</module>
    <module>pm</module>
    <module>ui</module>
    <module>sso-jaas</module>
    <module>sso-ldap</module>
    <module>exi</module>
    <module>ting</module>
    <module>gensvc</module>
    <module>coresw</module>
    <module>eftsw</module>
    <module>eftep</module>
    <module>pos</module>
    <module>atm</module>
    <module>sim</module>
    <module>web</module>
    <module>eua</module>
    <module>resources</module>
    <module>smoketest</module>
    <module>systest</module>
    <module>pim</module>
    <module>upp</module>
  </modules>
  <profiles>
    <profile>
      <id>smoketest</id>
      <build>
    <plugins>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-surefire-plugin</artifactId>
        <configuration>
          <testFailureIgnore>false</testFailureIgnore>
          <skip>false</skip>
          <forkMode>always</forkMode>
          <includes>
            <include>**/IntegrationSmokeTest.java</include>
          </includes>
          <systemPropertyVariables>
            <com.distra.ting.pproxy.config>${com.distra.ting.pproxy.config}</com.distra.ting.pproxy.config>
            <com.distra.ting.pproxy.environmentDir>${user.home}/bt3/environments</com.distra.ting.pproxy.environmentDir>
            <IGNORE_COMPONENT_WARNINGS>true</IGNORE_COMPONENT_WARNINGS>
          </systemPropertyVariables>
        </configuration>
      </plugin>
    </plugins>
    </build>
    </profile>
    <profile>
      <id>systest</id>
      <build>
        <defaultGoal>clean integration-test site-deploy</defaultGoal>
        <plugins>
          <plugin>
            <artifactId>maven-surefire-plugin</artifactId>
            <executions>
              <execution>
                <id>systest</id>
                <phase>integration-test</phase>
                <goals><goal>test</goal></goals>
                <configuration>
                  <reportsDirectory>${project.build.directory}/surefire-reports</reportsDirectory>
                  <!-- don't fail build if systests fail -->
                  <testFailureIgnore>true</testFailureIgnore>
                  <includes>
                    <include>**/*SystemTest*</include>
                  </includes>
                  <forkMode>always</forkMode>
                  <argLine>${itCoverageAgent}</argLine>
                  <systemPropertyVariables>
                    <com.distra.ting.pproxy.config>${com.distra.ting.pproxy.config}</com.distra.ting.pproxy.config>
                    <com.distra.ting.pproxy.environmentDir>${user.home}/bt3/environments</com.distra.ting.pproxy.environmentDir>
                  </systemPropertyVariables>
                </configuration>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>
    <profile>
      <id>distra-release</id>
      <properties>
        <distra.obf.classifier>obf</distra.obf.classifier>
        <distra.cartridge.classesDir>${project.build.directory}/obf-classes</distra.cartridge.classesDir>
      </properties>
      <build>
        <plugins>
          <plugin>
            <!--
                Prepopulate proguard map file so install step doesn't
                fail in top level switch project since I can't find
                anyway to conditional skip a step in the parent
                project.
            -->
            <artifactId>maven-antrun-plugin</artifactId>
            <version>${antrun.version}</version>
            <executions>
              <execution>
                <id>pre-populate-proguard-map-file</id>
                <phase>process-classes</phase>
                <goals><goal>run</goal></goals>
                <configuration>
                  <target>
                    <mkdir dir="${project.build.directory}"/>
                    <echo file="${project.build.directory}/proguard_map.txt" />
                  </target>
                </configuration>
              </execution>
            </executions>
          </plugin>
          <plugin>
            <groupId>com.pyx4me</groupId>
            <artifactId>proguard-maven-plugin</artifactId>
            <version>2.0.4</version>
            <executions>
              <execution>
                <phase>process-classes</phase>
                <goals><goal>proguard</goal></goals>
              </execution>
            </executions>
            <configuration>
              <proguardVersion>4.4</proguardVersion>
              <skip>false</skip>
              <injarNotExistsSkip>true</injarNotExistsSkip>
              <obfuscate>true</obfuscate>
              <maxMemory>512m</maxMemory>
              <injar>classes</injar>
              <outjar>obf-classes</outjar>
              <outputDirectory>${project.build.directory}</outputDirectory>
              <options>
                <option>-dontoptimize</option>
                <option>-ignorewarnings</option>
                <option>-dontnote</option>
                <option>-dontshrink</option>
                <option>-verbose</option>
                <option>-dontskipnonpubliclibraryclasses</option>
                <option>-renamesourcefileattribute SourceFile</option>
                <option>-keepattributes Exceptions,InnerClasses,SourceFile,LineNumberTable,Deprecated,Signature,*Annotation*,EnclosingMethod</option>
                <option>-keepclasseswithmembers public class * { public static void main(java.lang.String[]); }</option>
                <option>-keepclassmembers class * extends java.lang.Enum { public **[] values(); }</option>
                <option>-keepclasseswithmembernames class * { native &lt;methods&gt;; }</option>
                <option>-keepclassmembernames class * { java.lang.Class class$(java.lang.String); java.lang.Class class$(java.lang.String, boolean); }</option>
                <option>-keep interface *</option>
                <option>-keep class * implements java.io.Serializable</option>
                <option>-keepclassmembers class * implements java.io.Serializable { *; }</option>
                <option>-keepnames class * extends javax.servlet.http.HttpServlet</option>
                <option>-keepclassmembers class * extends javax.servlet.http.HttpServlet { public *; }</option>
                <option>-keep public class ** { public protected *; }</option>
              </options>
              <libs>
                <lib>${java.home}/${java.rt}</lib>
                <lib>${java.home}/${java.jsse}</lib>
                <lib>${java.home}/lib/jce.jar</lib>
              </libs>
            </configuration>
            <dependencies>
              <dependency>
                <groupId>net.sf.proguard</groupId>
                <artifactId>proguard</artifactId>
                <version>4.4</version>
                <scope>runtime</scope>
              </dependency>
            </dependencies>
          </plugin>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-jar-plugin</artifactId>
            <executions>
              <execution>
                <id>build-obfuscated-jar</id>
                <goals><goal>jar</goal></goals>
                <configuration>
                  <classesDirectory>${project.build.directory}/obf-classes</classesDirectory>
                  <classifier>obf</classifier>
                  <finalName>${project.build.finalName}</finalName>
                  <outputDirectory>${project.build.directory}</outputDirectory>
                </configuration>
              </execution>
            </executions>
          </plugin>
          <plugin>
            <!-- Attach Proguard mapping file to project so it will automatically
                 get installed and deployed along with the other project artifacts. -->
            <groupId>org.codehaus.mojo</groupId>
            <artifactId>build-helper-maven-plugin</artifactId>
            <version>1.7</version>
            <executions>
              <execution>
                <id>attach-artifacts</id>
                <phase>package</phase>
                <goals>
                  <goal>attach-artifact</goal>
                </goals>
                <configuration>
                  <artifacts>
                    <artifact>
                      <classifier>proguard-map</classifier>
                      <type>txt</type>
                      <file>${project.build.directory}/proguard_map.txt</file>
                    </artifact>
                  </artifacts>
                </configuration>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>
    <profile>
      <!-- Profile to handle Apple supplied JDK that puts things in different places
           Activate based on the presence of the Classes dir, rather than checking the OS,
           since from JDK 1.7, Apple no longer supplies JDK and OpenJDK has things in the usual places
      -->
      <id>JavaClasses</id>
      <activation>
        <file>
          <exists>${java.home}/../Classes</exists>
        </file>
      </activation>
      <properties>
        <java.rt>../Classes/classes.jar</java.rt>
        <java.jsse>../Classes/jsse.jar</java.jsse>
      </properties>
    </profile>
    <profile>
      <id>maven-2</id>
      <activation>
        <file>
          <!-- basedir expression is only recognized by Maven 3.x (see MNG-2363) -->
          <missing>${basedir}</missing>
        </file>
      </activation>
      <properties>
        <sonarVersion>1.0</sonarVersion>
      </properties>
    </profile>
    <profile>
      <id>maven-3</id>
      <activation>
        <file>
          <!-- basedir expression is only recognized by Maven 3.x (see MNG-2363) -->
          <exists>${basedir}</exists>
        </file>
      </activation>
      <properties>
        <sonarVersion>2.0</sonarVersion>
      </properties>
    </profile>
    <profile>
      <id>verbose</id>
      <activation>
        <property>
          <name>!skipVerbose</name>
        </property>
      </activation>
      <build>
        <plugins>
          <plugin>
            <artifactId>maven-help-plugin</artifactId>
            <executions>
              <execution>
                <id>verbose</id>
                <phase>validate</phase>
                <goals>
                  <goal>system</goal>
                  <goal>active-profiles</goal>
                  <goal>effective-pom</goal>
                </goals>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>
  </profiles>
</project>
<!-- $Id: pom.xml 59802 2013-06-19 06:20:03Z james $ -->
