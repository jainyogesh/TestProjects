//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, vJAXB 2.1.10 in JDK 6 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2014.02.20 at 11:44:23 AM IST 
//


package org.jainy.jaxb;

import javax.xml.bind.JAXBElement;
import javax.xml.bind.annotation.XmlElementDecl;
import javax.xml.bind.annotation.XmlRegistry;
import javax.xml.namespace.QName;


/**
 * This object contains factory methods for each 
 * Java content interface and Java element interface 
 * generated in the org.jainy.jaxb package. 
 * <p>An ObjectFactory allows you to programatically 
 * construct new instances of the Java representation 
 * for XML content. The Java representation of XML 
 * content can consist of schema derived interfaces 
 * and classes representing the binding of schema 
 * type definitions, element declarations and model 
 * groups.  Factory methods for each of these are 
 * provided in this class.
 * 
 */
@XmlRegistry
public class ObjectFactory {

    private final static QName _OrgInfo_QNAME = new QName("", "OrgInfo");
    private final static QName _TestAddr2_QNAME = new QName("", "TestAddr2");
    private final static QName _TestAddr1_QNAME = new QName("", "TestAddr1");
    private final static QName _ContactName_QNAME = new QName("", "ContactName");
    private final static QName _Addr3_QNAME = new QName("", "Addr3");
    private final static QName _Addr4_QNAME = new QName("", "Addr4");
    private final static QName _Addr1_QNAME = new QName("", "Addr1");
    private final static QName _Addr2_QNAME = new QName("", "Addr2");
    private final static QName _TestAddress_QNAME = new QName("", "TestAddress");
    private final static QName _TestOrgInfo_QNAME = new QName("", "TestOrgInfo");
    private final static QName _Dummy_QNAME = new QName("", "Dummy");
    private final static QName _TestCompositeContactInfo_QNAME = new QName("", "TestCompositeContactInfo");
    private final static QName _DummyName2_QNAME = new QName("", "DummyName2");
    private final static QName _DummyName1_QNAME = new QName("", "DummyName1");
    private final static QName _CompositeContactInfo_QNAME = new QName("", "CompositeContactInfo");
    private final static QName _Address_QNAME = new QName("", "Address");
    private final static QName _Root_QNAME = new QName("", "Root");
    private final static QName _ContactInfo_QNAME = new QName("", "ContactInfo");
    private final static QName _TestAddr3_QNAME = new QName("", "TestAddr3");
    private final static QName _TestAddr4_QNAME = new QName("", "TestAddr4");

    /**
     * Create a new ObjectFactory that can be used to create new instances of schema derived classes for package: org.jainy.jaxb
     * 
     */
    public ObjectFactory() {
    }

    /**
     * Create an instance of {@link TestAddressType }
     * 
     */
    public TestAddressType createTestAddressType() {
        return new TestAddressType();
    }

    /**
     * Create an instance of {@link ContactInfoType }
     * 
     */
    public ContactInfoType createContactInfoType() {
        return new ContactInfoType();
    }

    /**
     * Create an instance of {@link TestOrgInfoType }
     * 
     */
    public TestOrgInfoType createTestOrgInfoType() {
        return new TestOrgInfoType();
    }

    /**
     * Create an instance of {@link RootType }
     * 
     */
    public RootType createRootType() {
        return new RootType();
    }

    /**
     * Create an instance of {@link DummyType }
     * 
     */
    public DummyType createDummyType() {
        return new DummyType();
    }

    /**
     * Create an instance of {@link OrgInfoType }
     * 
     */
    public OrgInfoType createOrgInfoType() {
        return new OrgInfoType();
    }

    /**
     * Create an instance of {@link TestCompositeContactInfoType }
     * 
     */
    public TestCompositeContactInfoType createTestCompositeContactInfoType() {
        return new TestCompositeContactInfoType();
    }

    /**
     * Create an instance of {@link AddressType }
     * 
     */
    public AddressType createAddressType() {
        return new AddressType();
    }

    /**
     * Create an instance of {@link CompositeContactInfoType }
     * 
     */
    public CompositeContactInfoType createCompositeContactInfoType() {
        return new CompositeContactInfoType();
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link OrgInfoType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "OrgInfo")
    public JAXBElement<OrgInfoType> createOrgInfo(OrgInfoType value) {
        return new JAXBElement<OrgInfoType>(_OrgInfo_QNAME, OrgInfoType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "TestAddr2")
    public JAXBElement<String> createTestAddr2(String value) {
        return new JAXBElement<String>(_TestAddr2_QNAME, String.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "TestAddr1")
    public JAXBElement<String> createTestAddr1(String value) {
        return new JAXBElement<String>(_TestAddr1_QNAME, String.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "ContactName")
    public JAXBElement<String> createContactName(String value) {
        return new JAXBElement<String>(_ContactName_QNAME, String.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "Addr3")
    public JAXBElement<String> createAddr3(String value) {
        return new JAXBElement<String>(_Addr3_QNAME, String.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "Addr4")
    public JAXBElement<String> createAddr4(String value) {
        return new JAXBElement<String>(_Addr4_QNAME, String.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "Addr1")
    public JAXBElement<String> createAddr1(String value) {
        return new JAXBElement<String>(_Addr1_QNAME, String.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "Addr2")
    public JAXBElement<String> createAddr2(String value) {
        return new JAXBElement<String>(_Addr2_QNAME, String.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link TestAddressType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "TestAddress")
    public JAXBElement<TestAddressType> createTestAddress(TestAddressType value) {
        return new JAXBElement<TestAddressType>(_TestAddress_QNAME, TestAddressType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link TestOrgInfoType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "TestOrgInfo")
    public JAXBElement<TestOrgInfoType> createTestOrgInfo(TestOrgInfoType value) {
        return new JAXBElement<TestOrgInfoType>(_TestOrgInfo_QNAME, TestOrgInfoType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link DummyType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "Dummy")
    public JAXBElement<DummyType> createDummy(DummyType value) {
        return new JAXBElement<DummyType>(_Dummy_QNAME, DummyType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link TestCompositeContactInfoType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "TestCompositeContactInfo")
    public JAXBElement<TestCompositeContactInfoType> createTestCompositeContactInfo(TestCompositeContactInfoType value) {
        return new JAXBElement<TestCompositeContactInfoType>(_TestCompositeContactInfo_QNAME, TestCompositeContactInfoType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "DummyName2")
    public JAXBElement<String> createDummyName2(String value) {
        return new JAXBElement<String>(_DummyName2_QNAME, String.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "DummyName1")
    public JAXBElement<String> createDummyName1(String value) {
        return new JAXBElement<String>(_DummyName1_QNAME, String.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link CompositeContactInfoType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "CompositeContactInfo")
    public JAXBElement<CompositeContactInfoType> createCompositeContactInfo(CompositeContactInfoType value) {
        return new JAXBElement<CompositeContactInfoType>(_CompositeContactInfo_QNAME, CompositeContactInfoType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link AddressType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "Address")
    public JAXBElement<AddressType> createAddress(AddressType value) {
        return new JAXBElement<AddressType>(_Address_QNAME, AddressType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link RootType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "Root")
    public JAXBElement<RootType> createRoot(RootType value) {
        return new JAXBElement<RootType>(_Root_QNAME, RootType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link ContactInfoType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "ContactInfo")
    public JAXBElement<ContactInfoType> createContactInfo(ContactInfoType value) {
        return new JAXBElement<ContactInfoType>(_ContactInfo_QNAME, ContactInfoType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "TestAddr3")
    public JAXBElement<String> createTestAddr3(String value) {
        return new JAXBElement<String>(_TestAddr3_QNAME, String.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "TestAddr4")
    public JAXBElement<String> createTestAddr4(String value) {
        return new JAXBElement<String>(_TestAddr4_QNAME, String.class, null, value);
    }

}
